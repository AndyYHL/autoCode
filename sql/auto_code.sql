/*
Navicat MySQL Data Transfer

Source Server         : 106.14.115.145
Source Server Version : 50721
Source Host           : 106.14.115.145:3306
Source Database       : auto_code

Target Server Type    : MYSQL
Target Server Version : 50721
File Encoding         : 65001

Date: 2023-04-20 10:23:37
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for back_user
-- ----------------------------
DROP TABLE IF EXISTS `back_user`;
CREATE TABLE `back_user` (
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `password` varchar(50) NOT NULL COMMENT '密码',
  `add_time` datetime NOT NULL COMMENT '添加时间',
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of back_user
-- ----------------------------
INSERT INTO `back_user` VALUES ('aaaa', '123456', '2015-01-05 11:52:26');
INSERT INTO `back_user` VALUES ('admin', 'admin1', '2014-06-24 10:12:49');

-- ----------------------------
-- Table structure for datasource_config
-- ----------------------------
DROP TABLE IF EXISTS `datasource_config`;
CREATE TABLE `datasource_config` (
  `dc_id` int(11) NOT NULL AUTO_INCREMENT,
  `driver_class` varchar(50) DEFAULT NULL COMMENT '数据库驱动',
  `db_name` varchar(50) DEFAULT NULL,
  `ip` varchar(50) DEFAULT NULL,
  `port` int(11) DEFAULT NULL,
  `username` varchar(50) DEFAULT NULL,
  `password` varchar(50) DEFAULT NULL,
  `back_user` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`dc_id`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of datasource_config
-- ----------------------------
INSERT INTO `datasource_config` VALUES ('4', 'com.mysql.jdbc.Driver', 'auto_code', 'localhost', '3306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('6', 'com.mysql.jdbc.Driver', 'rms', 'localhost', '3306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('9', 'com.mysql.jdbc.Driver', 'stu', 'localhost', '3306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('11', 'com.mysql.jdbc.Driver', 'ymm', '127.0.0.1', '3306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('12', 'com.mysql.jdbc.Driver', 'vback', '127.0.0.1', '3306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('13', 'com.mysql.jdbc.Driver', 'yqy', '101.207.248.146', '53306', 'root', 'root', 'admin');
INSERT INTO `datasource_config` VALUES ('14', 'com.mysql.jdbc.Driver', 'erp', '106.14.115.145', '3306', 'jdl', 'hakeny1985213', 'admin');
INSERT INTO `datasource_config` VALUES ('15', 'com.mysql.jdbc.Driver', 'order_test', '106.14.115.145', '3306', 'jdl', 'hakeny1985213', 'admin');
INSERT INTO `datasource_config` VALUES ('16', 'com.mysql.jdbc.Driver', 'marketing_center', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('17', 'com.mysql.jdbc.Driver', 'erp', '114.251.122.180', '3306', 'root', 'rain1q2w3e4r5t', 'admin');
INSERT INTO `datasource_config` VALUES ('18', 'com.mysql.jdbc.Driver', 'order', '114.251.122.180', '3306', 'root', 'rain1q2w3e4r5t', 'admin');
INSERT INTO `datasource_config` VALUES ('19', 'com.mysql.jdbc.Driver', 'test', '192.168.60.5', '3306', 'root', '123456', 'admin');
INSERT INTO `datasource_config` VALUES ('20', 'com.mysql.jdbc.Driver', 'report', '192.168.40.40', '3306', 'root', '123456', 'admin');
INSERT INTO `datasource_config` VALUES ('21', 'com.mysql.jdbc.Driver', 'erp', '192.168.70.23', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('22', 'com.mysql.jdbc.Driver', 'device', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('23', 'com.mysql.jdbc.Driver', 'walker_dev', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('24', 'com.mysql.jdbc.Driver', 'order', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('25', 'com.mysql.jdbc.Driver', 'crm', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('26', 'com.mysql.jdbc.Driver', 'marketing', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('27', 'com.mysql.jdbc.Driver', 'zny', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('28', 'com.mysql.jdbc.Driver', 'camus', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('29', 'com.mysql.jdbc.Driver', 'store', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('30', 'com.mysql.jdbc.Driver', 'sms', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('31', 'com.mysql.jdbc.Driver', 'ty', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('32', 'com.mysql.jdbc.Driver', 'test', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('33', 'com.mysql.jdbc.Driver', 'platform_app', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('34', 'com.mysql.jdbc.Driver', 'grape', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('35', 'com.mysql.jdbc.Driver', 'gotone_marketing', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('36', 'com.mysql.jdbc.Driver', 'zny_small_oil_drums', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('37', 'com.mysql.jdbc.Driver', 'gadgets', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('38', 'com.mysql.jdbc.Driver', 'zny_emp', '192.168.40.42', '3306', 'toyou', 'Toyou_123', 'admin');
INSERT INTO `datasource_config` VALUES ('40', 'com.mysql.jdbc.Driver', 'ds_marketing', '192.168.15.107', '3308', 'paas', 'paas', 'admin');
INSERT INTO `datasource_config` VALUES ('41', 'com.mysql.jdbc.Driver', 'cross_admin', '192.168.70.23', '3306', 'cross', 'H%e@3v8S', 'admin');
INSERT INTO `datasource_config` VALUES ('42', 'com.mysql.jdbc.Driver', 'cross_order', '192.168.70.23', '3306', 'cross', 'H%e@3v8S', 'admin');
INSERT INTO `datasource_config` VALUES ('43', 'com.mysql.jdbc.Driver', 'cross_merchant', '192.168.70.23', '3306', 'cross', 'H%e@3v8S', 'admin');
INSERT INTO `datasource_config` VALUES ('44', 'com.mysql.jdbc.Driver', 'cross_risk', '192.168.70.23', '3306', 'cross', 'H%e@3v8S', 'admin');

-- ----------------------------
-- Table structure for template_config
-- ----------------------------
DROP TABLE IF EXISTS `template_config`;
CREATE TABLE `template_config` (
  `tc_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `save_path` varchar(100) DEFAULT NULL,
  `suffix` varchar(20) DEFAULT NULL,
  `file_name` varchar(50) DEFAULT NULL,
  `content` text,
  `back_user` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`tc_id`),
  KEY `f_backuser` (`back_user`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=76 DEFAULT CHARSET=utf8 COMMENT='模板表';

-- ----------------------------
-- Records of template_config
-- ----------------------------
INSERT INTO `template_config` VALUES ('15', 'sw-mybatis-sqlserver', '${context.javaBeanNameLF}/mapper', 'xml', '${context.javaBeanNameLF}Mapper.xml', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper namespace=\"${context.packageName}.${context.javaBeanNameLF}.dao.${context.javaBeanName}Dao\">\n<resultMap id=\"BaseResultMap\" type=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\">\n#foreach($column in $columns)\n    <result column=\"${column.columnName}\" property=\"${column.javaFieldName}\" jdbcType=\"${column.mybatisJdbcType}\"/>\n#end	\n</resultMap>\n	<select id=\"query\" resultMap=\"BaseResultMap\" parameterType=\"com.shunwang.business.framework.mybatis.query.ConditionQuery\" >\n		<if test=\"paramMap.rp>0\">\n			SELECT t0.* FROM (\n		</if>\n		select row_number() over(order by\n		<choose>\n			<when test=\"paramMap.orderCol!=null\">\n				${paramMap.orderCol}\n			</when>\n			<otherwise>\n				${context.pkName} desc\n			</otherwise>\n		</choose>\n		) row\n                \n        #foreach($column in $columns)                          \n               ,${column.columnName}                                  \n        #end\n		from ${table.tableName} t \n		<include refid=\"conditionQuery.core\" />\n 		<if test=\"paramMap.rp > 0\">\n			) t0 WHERE t0.row BETWEEN (#{paramMap.firstResult} +1) AND\n			(#{paramMap.firstResult}  + #{paramMap.rp})\n		</if>\n	</select>\n	<select id=\"get\" resultMap=\"BaseResultMap\" parameterType=\"java.lang.Integer\" >\n   SELECT \n#set ($i=0) \n        #foreach($column in $columns)                          \n                #if($i > 0),#end \n                ${column.columnName}\n                  #set($i=$i +1)                  \n        #end\n        FROM ${table.tableName}\n        WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n	 </select>\n	<delete id=\"delete\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\" >\n       DELETE FROM ${table.tableName}\n        WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n	</delete>\n	<insert id=\"save\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\" useGeneratedKeys=\"true\" keyProperty=\"${context.javaPkName}\">\n		INSERT INTO ${table.tableName}\n         (\n #set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isIdentityPk})               \n        #if($i > 0),#end ${column.columnName}\n               #set($i=$i +1)\n            #end          \n        #end\n          )\n    VALUES (\n        #set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isIdentityPk})               \n        #if($i > 0),#end #{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\n               #set($i=$i +1)\n            #end          \n        #end\n \n        )\n	</insert>\n	<select id=\"queryCnt\" parameterType=\"com.shunwang.business.framework.mybatis.query.ConditionQuery\" resultType=\"java.lang.Integer\" >\n		select count(*) from ${table.tableName} t\n		<include refid=\"conditionQuery.core\" />\n	</select>\n\n    <update id=\"update\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\">\n    UPDATE ${table.tableName}\n    SET \n#set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isPk})               \n        #if($i > 0),#end ${column.columnName}=#{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\n               #set($i=$i +1)\n            #end          \n        #end    \n    WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n    </update>\n</mapper>', 'admin');
INSERT INTO `template_config` VALUES ('16', 'sw-pojo', '${context.javaBeanNameLF}/pojo', 'java', '${context.javaBeanName}.java', 'package ${context.packageName}.${context.javaBeanNameLF}.pojo;\n\nimport com.shunwang.business.framework.pojo.BasePojo;\n\npublic class ${context.javaBeanName} extends BasePojo {\n#foreach($column in $columns) \n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n\n#foreach(${column} in ${columns}) \n    public void set${column.javaFieldNameUF}(${column.javaTypeBox} ${column.javaFieldName}){\n        this.${column.javaFieldName} = ${column.javaFieldName};\n    }\n\n    public ${column.javaTypeBox} get${column.javaFieldNameUF}(){\n        return this.${column.javaFieldName};\n    }\n\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('17', 'sw-dao', '${context.javaBeanNameLF}/dao', 'java', '${context.javaBeanName}Dao.java', 'package ${context.packageName}.${context.javaBeanNameLF}.dao;\n\nimport com.shunwang.business.framework.dao.CrudDao;\nimport ${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName};\n\npublic interface ${context.javaBeanName}Dao extends CrudDao<${context.javaBeanName}> {\n}', 'admin');
INSERT INTO `template_config` VALUES ('18', 'sw-bo', '${context.javaBeanNameLF}/bo', 'java', '${context.javaBeanName}Bo.java', 'package ${context.packageName}.${context.javaBeanNameLF}.bo;\n\nimport org.springframework.stereotype.Service;\n\nimport com.shunwang.business.framework.bo.CrudBo;\nimport ${context.packageName}.${context.javaBeanNameLF}.dao.${context.javaBeanName}Dao;\nimport ${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName};\n\n@Service\npublic class ${context.javaBeanName}Bo extends CrudBo<${context.javaBeanName}, ${context.javaBeanName}Dao> {\n\n}', 'admin');
INSERT INTO `template_config` VALUES ('20', 'sw-mybatis-mysql', '${context.javaBeanNameLF}/mapper', 'xml', '${context.javaBeanNameLF}Mapper.xml', '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\n<mapper namespace=\"${context.packageName}.${context.javaBeanNameLF}.dao.${context.javaBeanName}Dao\">\n<resultMap id=\"BaseResultMap\" type=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\">\n#foreach($column in $columns)\n    <result property=\"${column.javaFieldName}\" column=\"${column.columnName}\" jdbcType=\"${column.mybatisJdbcType}\"/>\n#end    \n</resultMap>\n    <select id=\"query\" resultMap=\"BaseResultMap\" parameterType=\"com.shunwang.business.framework.mybatis.query.ConditionQuery\" >\n        SELECT *\n	FROM ${table.tableName} t\n	<include refid=\"conditionQuery.core\" />\n	<choose>\n		<when test=\"paramMap.orderCol!=null\">\n			ORDER BY ${paramMap.orderCol}\n		</when>\n		<otherwise>\n			ORDER BY ${context.pkName} desc\n		</otherwise>\n	</choose>\n	<if test=\"paramMap.rp>0\">\n		LIMIT #{paramMap.firstResult},#{paramMap.rp}\n	</if>\n    </select>\n\n    <select id=\"get\" resultMap=\"BaseResultMap\" parameterType=\"java.lang.Integer\" >\n   SELECT \n#set ($i=0) \n        #foreach($column in $columns)                          \n                #if($i > 0),#end \n                ${column.columnName}\n                  #set($i=$i+ 1)                  \n        #end\n        FROM ${table.tableName}\n        WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n     </select>\n    <delete id=\"delete\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\" >\n       DELETE FROM ${table.tableName}\n        WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n    </delete>\n    <insert id=\"save\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\" useGeneratedKeys=\"true\" keyProperty=\"${context.javaPkName}\">\n        INSERT INTO ${table.tableName}\n         (\n #set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isIdentityPk})               \n        #if($i > 0),#end ${column.columnName}\n               #set($i=$i +1)\n            #end          \n        #end\n          )\n    VALUES (\n        #set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isIdentityPk})               \n        #if($i > 0),#end #{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\n               #set($i=$i +1)\n            #end          \n        #end\n \n        )\n    </insert>\n    <select id=\"queryCnt\" parameterType=\"com.shunwang.business.framework.mybatis.query.ConditionQuery\" resultType=\"java.lang.Integer\" >\n        select count(*) from ${table.tableName} t\n        <include refid=\"conditionQuery.core\" />\n    </select>\n\n    <update id=\"update\" parameterType=\"${context.packageName}.${context.javaBeanNameLF}.pojo.${context.javaBeanName}\">\n    UPDATE ${table.tableName}\n    SET \n#set ($i=0) \n        #foreach($column in $columns) \n            #if(!${column.isPk})               \n        #if($i > 0),#end ${column.columnName}=#{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\n               #set($i=$i +1)\n            #end          \n        #end    \n    WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\n    </update>\n</mapper>', 'admin');
INSERT INTO `template_config` VALUES ('32', 'v_Entity', 'entity', null, '${context.javaBeanName}.java', 'package ${context.packageName}.entity;\n\n#if( \"${table.comment}\" != \"\" )\n/**\n * ${table.comment}\n */\n#end\npublic class ${context.javaBeanName} {\n#foreach($column in $columns)\n#if( \"${column.comment}\" != \"\" )\n	/**\n	 * ${column.comment}\n     */\n#end\n	private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n\n#foreach(${column} in ${columns})\n#if( \"${column.comment}\" != \"\" )\n	/** 设置 ${column.comment},对应字段 ${table.tableName}.${column.columnName} */\n#end     \n	public void set${column.javaFieldNameUF}(${column.javaTypeBox} ${column.javaFieldName}){\n		this.${column.javaFieldName} = ${column.javaFieldName};\n	}\n#if( \"${column.comment}\" != \"\" )\n	/** 获取 ${column.comment},对应字段 ${table.tableName}.${column.columnName} */\n#end	     \n	public ${column.javaTypeBox} get${column.javaFieldNameUF}(){\n		return this.${column.javaFieldName};\n	}\n\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('33', 'v_DAO', 'dao', null, '${context.javaBeanName}Dao.java', 'package ${context.packageName}.dao;\n\nimport org.durcframework.core.dao.BaseDao;\nimport ${context.packageName}.entity.${context.javaBeanName};\n\npublic interface ${context.javaBeanName}Dao extends BaseDao<${context.javaBeanName}> {\n}', 'admin');
INSERT INTO `template_config` VALUES ('34', 'v_Service', 'service', null, '${context.javaBeanName}Service.java', 'package ${context.packageName}.service;\n\nimport org.durcframework.core.service.CrudService;\nimport ${context.packageName}.dao.${context.javaBeanName}Dao;\nimport ${context.packageName}.entity.${context.javaBeanName};\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ${context.javaBeanName}Service extends CrudService<${context.javaBeanName}, ${context.javaBeanName}Dao> {\n\n}', 'admin');
INSERT INTO `template_config` VALUES ('35', 'v_SearchEntity', 'entity', null, '${context.javaBeanName}Sch.java', 'package ${context.packageName}.entity;\n\nimport org.durcframework.core.expression.annotation.ValueField;\nimport org.durcframework.core.support.SearchEasyUI;\n\npublic class ${context.javaBeanName}Sch extends SearchEasyUI {\n\n#foreach($column in $columns) \n    private ${column.javaTypeBox} ${column.javaFieldName}Sch;\n#end\n\n#foreach(${column} in ${columns}) \n    public void set${column.javaFieldNameUF}Sch(${column.javaTypeBox} ${column.javaFieldName}Sch){\n        this.${column.javaFieldName}Sch = ${column.javaFieldName}Sch;\n    }\n    \n    @ValueField(column = \"${column.columnName}\")\n    public ${column.javaTypeBox} get${column.javaFieldNameUF}Sch(){\n        return this.${column.javaFieldName}Sch;\n    }\n\n#end\n\n}', 'admin');
INSERT INTO `template_config` VALUES ('36', 'v_Controller', 'controller', null, '${context.javaBeanName}Controller.java', 'package ${context.packageName}.controller;\n\nimport org.durcframework.core.GridResult;\nimport org.durcframework.core.MessageResult;\nimport org.durcframework.core.controller.CrudController;\nimport ${context.packageName}.entity.${context.javaBeanName};\nimport ${context.packageName}.entity.${context.javaBeanName}Sch;\nimport ${context.packageName}.service.${context.javaBeanName}Service;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\n@Controller\npublic class ${context.javaBeanName}Controller extends\n		CrudController<${context.javaBeanName}, ${context.javaBeanName}Service> {\n\n	@RequestMapping(\"/add${context.javaBeanName}.do\")\n	public @ResponseBody MessageResult add${context.javaBeanName}(${context.javaBeanName} entity) {\n		return this.save(entity);\n	}\n\n	@RequestMapping(\"/list${context.javaBeanName}.do\")\n	public @ResponseBody GridResult list${context.javaBeanName}(${context.javaBeanName}Sch searchEntity) {\n		return this.query(searchEntity);\n	}\n\n	@RequestMapping(\"/update${context.javaBeanName}.do\")\n	public @ResponseBody MessageResult update${context.javaBeanName}(${context.javaBeanName} entity) {\n		return this.update(entity);\n	}\n\n	@RequestMapping(\"/del${context.javaBeanName}.do\")\n	public @ResponseBody MessageResult del${context.javaBeanName}(${context.javaBeanName} entity) {\n		return this.delete(entity);\n	}\n	\n}', 'admin');
INSERT INTO `template_config` VALUES ('37', 'v_Mybatis', 'mapper', null, '${context.javaBeanNameLF}Mapper.xml', '#set($jq=\"$\")\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE  mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\" >\r\n<!--      \r\n	This file is automatically generated by autoCode(https://git.oschina.net/durcframework/autoCode)\r\n-->\r\n<mapper namespace=\"${context.packageName}.dao.${context.javaBeanName}Dao\">\r\n    <resultMap id=\"queryResultMap\" type=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n        #foreach($column in $columns)\r\n        #if( \"${column.comment}\" != \"\" )\r\n		<!-- ${column.comment} -->\r\n		#end\r\n        <result column=\"${column.columnName}\" property=\"${column.javaFieldName}\" jdbcType=\"${column.mybatisJdbcType}\" />\r\n        #end\r\n    </resultMap>\r\n    \r\n    <!-- 聚合查询 -->\r\n    <select id=\"findProjection\" parameterType=\"org.durcframework.core.expression.projection.ProjectionQuery\" resultType=\"java.util.HashMap\">\r\n		SELECT\r\n			<include refid=\"expressionBlock.projectionColumn\"/>\r\n		FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\"/>  \r\n		<include refid=\"expressionBlock.groupBy\"/>\r\n		<include refid=\"expressionBlock.having\"/>\r\n		<if test=\"order != null\">\r\n			ORDER BY ${jq}{order}\r\n		</if>\r\n	</select>\r\n	\r\n	<!-- 根据条件查询记录 -->\r\n    <select id=\"find\" parameterType=\"org.durcframework.core.expression.ExpressionQuery\"\r\n		resultMap=\"queryResultMap\">\r\n		SELECT \r\n        <choose>\r\n            <when test=\"columns.size>0\">\r\n            <foreach collection=\"columns\" item=\"column\" separator=\",\" >\r\n            	${jq}{column}\r\n            </foreach>\r\n            </when>\r\n            <otherwise>\r\n            #set ($i=0) \r\n            #foreach($column in $columns)                         \r\n            	#if($i > 0),#end t.${column.columnName}\r\n    			#set($i=$i +1)             \r\n            #end\r\n            </otherwise>\r\n		</choose>\r\n        \r\n		FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\" />\r\n		<choose>\r\n			<when test=\"order == null\">\r\n				ORDER BY t.${context.pkName} desc\r\n			</when>\r\n			<otherwise>\r\n				ORDER BY ${jq}{order}\r\n			</otherwise>\r\n		</choose>\r\n		<if test=\"!isQueryAll\">\r\n			LIMIT\r\n			#{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}\r\n		</if>\r\n	</select>\r\n\r\n	<!-- 根据条件查询记录数 -->\r\n    <select id=\"findTotalCount\" parameterType=\"org.durcframework.core.expression.ExpressionQuery\"\r\n		resultType=\"java.lang.Integer\">\r\n		SELECT count(*) FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\" />\r\n    </select>\r\n\r\n	<!-- 保存,保存全部字段 -->\r\n    <insert id=\"save\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\"\r\n#if(${pkColumn.isIdentity})\r\n    keyProperty=\"${context.javaPkName}\" keyColumn=\"${context.pkName}\" useGeneratedKeys=\"true\"\r\n#end\r\n    >\r\n	INSERT INTO ${table.tableName}\r\n         (\r\n #set ($i=0) \r\n        #foreach($column in $columns) \r\n            #if(!${column.isIdentityPk})               \r\n        #if($i > 0),#end `${column.columnName}`\r\n#set($i=$i +1)\r\n            #end          \r\n        #end\r\n          )\r\n	VALUES (\r\n #set ($i=0) \r\n        #foreach($column in $columns) \r\n            #if(!${column.isIdentityPk})               \r\n        #if($i > 0),#end #{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}}\r\n#set($i=$i +1)\r\n            #end          \r\n        #end\r\n \r\n        )\r\n	</insert>\r\n    \r\n    <!-- 保存,保存不为NULL的字段 -->\r\n    <insert id=\"saveNotNull\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\"\r\n    #if(${pkColumn.isIdentity})\r\n        keyProperty=\"${context.javaPkName}\" keyColumn=\"${context.pkName}\" useGeneratedKeys=\"true\"\r\n    #end\r\n        >\r\n        INSERT INTO ${table.tableName}\r\n    \r\n        <trim prefix=\"(\" suffix=\")\" suffixOverrides=\",\">	 \r\n\r\n            #foreach($column in $columns) \r\n                #if(!${column.isIdentityPk}) \r\n                    <if test=\"${column.javaFieldName} != null\">\r\n                   `${column.columnName}`,\r\n                    </if>\r\n                #end          \r\n            #end\r\n        </trim>\r\n        <trim prefix=\"values (\" suffix=\")\" suffixOverrides=\",\">            \r\n            #foreach($column in $columns) \r\n                #if(!${column.isIdentityPk})  \r\n                    <if test=\"${column.javaFieldName} != null\" >\r\n                    #{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}},                    \r\n                    </if>\r\n                #end          \r\n            #end\r\n        </trim>\r\n    </insert>\r\n\r\n	<!-- 更新,更新全部字段 -->\r\n    <update id=\"update\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n    UPDATE ${table.tableName}\r\n     <set>		\r\n     #foreach($column in $columns) \r\n         #if(!${column.isPk})               \r\n         ${column.columnName}=#{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}},        \r\n         #end          \r\n     #end\r\n     </set>	\r\n    WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n    </update>\r\n    \r\n    <!-- 根据指定条件更新 -->\r\n    <update id=\"updateByExpression\">\r\n		UPDATE ${table.tableName}\r\n        <set>		\r\n        #foreach($column in $columns) \r\n            #if(!${column.isPk})               \r\n        	${column.columnName}=#{entity.${column.javaFieldName},jdbcType=${column.mybatisJdbcType}},        \r\n     		#end          \r\n        #end\r\n        </set>\r\n		<include refid=\"expressionBlock.updateWhere\" />\r\n	</update>\r\n    \r\n    <!-- 更新不为NULL的字段 -->\r\n    <update id=\"updateNotNull\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n    UPDATE ${table.tableName}\r\n    <set>\r\n    	#foreach($column in $columns) \r\n            #if(!${column.isPk})  \r\n                <if test=\"${column.javaFieldName} != null\" >\r\n                ${column.columnName}=#{${column.javaFieldName},jdbcType=${column.mybatisJdbcType}},                 \r\n                </if>\r\n            #end          \r\n        #end\r\n    </set>\r\n    WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n    </update>\r\n    \r\n    <!-- 根据指定条件更新不为NULL的字段 -->\r\n    <update id=\"updateNotNullByExpression\">\r\n    UPDATE ${table.tableName}\r\n    <set>\r\n    	#foreach($column in $columns) \r\n            #if(!${column.isPk})  \r\n                <if test=\"entity.${column.javaFieldName} != null\" >\r\n                ${column.columnName}=#{entity.${column.javaFieldName},jdbcType=${column.mybatisJdbcType}},                 \r\n                </if>\r\n            #end          \r\n        #end\r\n    </set>\r\n    <include refid=\"expressionBlock.updateWhere\" />\r\n    </update>\r\n\r\n	<!-- 根据主键获取单条记录 -->\r\n    <select id=\"get\" resultMap=\"queryResultMap\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n		SELECT \r\n        #set ($i=0) \r\n        #foreach($column in $columns)                         \r\n        #if($i > 0),#end t.${column.columnName}\r\n#set($i=$i +1)             \r\n        #end\r\n		FROM ${table.tableName} t\r\n		WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n	</select>\r\n    \r\n    <!-- 根据条件获取单条记录 -->\r\n    <select id=\"getByExpression\" resultMap=\"queryResultMap\" parameterType=\"org.durcframework.core.expression.ExpressionQuery\">\r\n		SELECT\r\n		#set ($i=0) \r\n        #foreach($column in $columns)                         \r\n        	#if($i > 0),#end t.${column.columnName}\r\n			#set($i=$i +1)             \r\n        #end\r\n		FROM ${table.tableName} t\r\n		<include refid=\"expressionBlock.where\" />\r\n	</select>\r\n	\r\n	<!-- 根据主键删除记录 -->\r\n	<delete id=\"del\" parameterType=\"${context.packageName}.entity.${context.javaBeanName}\">\r\n		DELETE FROM ${table.tableName}\r\n		WHERE ${context.pkName} = #{${context.javaPkName},jdbcType=${context.mybatisPkType}}\r\n	</delete>    \r\n    \r\n    <!-- 根据条件删除记录 -->\r\n    <delete id=\"delByExpression\" parameterType=\"org.durcframework.core.expression.ExpressionQuery\">\r\n		DELETE FROM ${table.tableName}\r\n		<include refid=\"expressionBlock.where\" />\r\n	</delete>\r\n\r\n</mapper>', 'admin');
INSERT INTO `template_config` VALUES ('38', 'v_jsp', 'jsp', null, '${context.javaBeanNameLF}.jsp', '#set($jq=\"$\")\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\n    pageEncoding=\"UTF-8\"%>\n<%@ include file=\"../taglib.jsp\" %>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n <head>\n  <title>后台管理</title>\n </head>\n<body>\n	<form id=\"searchForm\">\n		<table>\n			<tr>\n#foreach($column in $columns)\n    #if(!${column.isIdentityPk})\n            <th>${column.javaFieldName}:</th><td><input type=\"text\" name=\"${column.javaFieldName}Sch\"></td>      \n    #end\n#end\n					<td>\n						<button  type=\"button\" id=\"schBtn\" class=\"button button-primary\">搜索</button>\n					</td>\n				</tr>\n		</table>\n		<button  type=\"button\" id=\"schBtn\" class=\"button button-primary\">搜索</button>\n	</form>\n	<hr>\n	<div class=\"grid-bar\">		\n		<button  type=\"button\" id=\"addBtn\" class=\"button button-primary\">新增</button>		\n	</div>\n    \n    <div id=\"grid\"></div>\n    \n    <div id=\"dlg\" class=\"hide\">\n      <form id=\"editForm\">\n      	<input type=\"hidden\" name=\"orderId\">\n      	<table>\n      		#foreach($column in $columns)\n		 #if(!${column.isIdentityPk})						\n		 <tr>          \n            <th><s>*</s>${column.javaFieldName}</th>\n            <td>\n              <input name=\"${column.javaFieldName}\"                \n              	rules=\"[\n                	{rule:{notNull:true},errorMsg:\'不能为空\'}\n                ]\"\n              	type=\"text\"/>\n            </td>            \n        </tr>\n					   #end\n					#end		\n\n      	</table>\n      </form>\n    </div>\n   \n\n<script type=\"text/javascript\">\n\nVUI.use([\'PageForm\'],function(){\n	var listUrl = ctx + \'list${context.javaBeanName}.do\'; // 查询\n	var addUrl = ctx + \'add${context.javaBeanName}.do\'; // 添加\n	var updateUrl = ctx + \'update${context.javaBeanName}.do\'; // 修改\n	var delUrl = ctx + \'del${context.javaBeanName}.do\'; // 删除\n	var ${jq}schBtn = ${jq}(\'#schBtn\'); // 查询按钮\n	var ${jq}addBtn = ${jq}(\'#addBtn\'); // 添加按钮\n	var ${jq}exportBtn = ${jq}(\'#exportBtn\');\n	\n	var grid; // 表格\n	var schForm,pageForm; \n	var dialog;// 编辑表单\n\n    function init() {\n    	initEditing();\n    	initGrid();\n    	initEvent();\n    	initForm();\n    }\n    \n    function initForm() {\n	    schForm = new VUI.Form({formId:\'searchForm\'});\n        \n        pageForm = new VUI.PageForm({\n			formId:\'editForm\'\n			,grid:grid\n			,win:dialog\n			,crudUrl:{\n				add:addUrl\n				,update:updateUrl\n				,del:delUrl\n			}\n		});\n    }\n    \n    function initEditing() {\n    	dialog = new VUI.DialogForm({\n			contentId:\'dlg\'\n			,formId:\'editForm\'\n            ,onOk:function(){\n            	save();\n            }\n		});\n    }\n    \n    function initGrid() {\n    	\n    	grid = new VUI.Grid({\n          	renderId:\'grid\'\n          	,url:listUrl\n          	,columns : [[\n   	    	   {title:\'订单编号\',field:\'orderId\'}\n   	          ,{title:\'手机号\',field:\'mobile\'}\n   	          ,{title:\'城市名\',field:\'cityName\'}\n   	          ,{title:\'地址\',field:\'address\'}\n   	          ,{title:\'下单时间\',field:\'createDate\'}\n   	          ,{title:\'操作\',field:\'\',width:200,formatter : function(value,obj){\n   	       	   	  var updateStr = \'<span class=\"grid-command btn-edit\">修改</span>\';\n   	              var delStr =\'<span class=\"grid-command btn-del\">删除</span>\';\n   	              return updateStr + delStr;\n   	            }}\n   	        ]]\n	    	,striped:true // 斑马线\n			,pagination :true\n			,rownumbers :true\n    	});\n\n    }\n    \n    function initEvent() {\n        grid.on(\'ClickCell\',function(ev){\n        	var sender = ${jq}(ev.target); //点击的Dom\n        	if(sender.hasClass(\'btn-del\')){\n            	var record = ev.row;\n            	del(record);\n        	}\n        	if(sender.hasClass(\'btn-edit\')){\n            	var record = ev.row;\n            	edit(record);\n        	}\n        });\n        \n    	${jq}schBtn.on(\'click\',function(ev){\n           search();\n    	});\n    	\n    	${jq}addBtn.on(\'click\',function(ev){\n           add();\n    	});\n    	\n    	${jq}exportBtn.on(\'click\',function(ev){\n    		exportFile();\n    	});\n    }\n    \n    \n    //////// functions ////////\n    \n    function search() {\n    	grid.load(schForm.getData());\n    }\n    \n    function exportFile() {\n    	var data = schForm.getData();\n    	ExportUtil.doExport(exportUrl,data);\n    }\n    \n    function save() {\n    	pageForm.save();\n    }\n    \n    function add(){\n    	pageForm.add();\n    }\n    \n    function edit(record) {\n    	pageForm.update(record);\n    }\n    \n    function del(record){\n    	pageForm.del(record);\n    }\n    \n    init();\n	\n});\n\n</script>\n</body>\n</html>', 'admin');
INSERT INTO `template_config` VALUES ('45', 'MyBatis-Plus_DO', 'domain', null, '${context.javaBeanName}DO.java', 'package ${context.packageName}.pojo.domain;\n\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\nimport java.util.Date;\n\n/**\n * ${table.comment}DO\n *\n * @author autoCode\n * ${datetime}\n */\n@Data\n@TableName(\"${table.tableName}\")\npublic class ${context.javaBeanName}DO {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if(${column.isPk})\n    @TableId\n#end\n#if( ${column.type} == \"datetime\" )\n    private LocalDateTime ${column.javaFieldName};\n#else\n#if( ${column.type} == \"date\" )\n    private LocalDate ${column.javaFieldName};\n#else\n#if( ${column.type} == \"time\" )\n    private LocalTime ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"version\" )\n	@Version\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"updateTime\" )\n	@TableField(fill = FieldFill.INSERT_UPDATE, update = \"now()\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"createTime\" )\n	@TableField(fill = FieldFill.INSERT, update = \"now()\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"valid\" )\n	@TableLogic\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('46', 'MyBatis-Plus_DTO', 'dto', null, '${context.javaBeanName}DTO.java', 'package ${context.packageName}.pojo.dto;\n\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\n\n/**\n * ${table.comment}Dto\n *\n * @author autoCode\n * ${datetime}\n */\n@Data\npublic class ${context.javaBeanName}DTO {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if( ${column.type} == \"datetime\" )\n    private LocalDateTime ${column.javaFieldName};\n#else\n#if( ${column.type} == \"date\" )\n    private LocalDate ${column.javaFieldName};\n#else\n#if( ${column.type} == \"time\" )\n    private LocalTime ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n#end\n#end\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('47', 'MyBatis-Plus_VO', 'vo', null, '${context.javaBeanName}VO.java', 'package ${context.packageName}.pojo.vo;\n\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\nimport java.util.Date;\n\n\n/**\n * ${table.comment}VO\n * \n * @author autoCode\n * ${datetime}\n */\n@Data\n@ApiModel(description = \"${context.javaBeanName}视图VO\")\npublic class ${context.javaBeanName}VO {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if( \"${column.javaTypeBox}\" == \"Double\" || \"${column.javaTypeBox}\" ==\"BigDecimal\" )\n    @ApiModelProperty(value = \"${column.comment}\", example = \"0\")\n#else\n    @ApiModelProperty(value = \"${column.comment}\")\n#end\n#if( ${column.type} == \"datetime\" )\n    private LocalDateTime ${column.javaFieldName};\n#else\n#if( ${column.type} == \"date\" )\n    private LocalDate ${column.javaFieldName};\n#else\n#if( ${column.type} == \"time\" )\n    private LocalTime ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n#end\n#end\n#end\n}\n\n', 'admin');
INSERT INTO `template_config` VALUES ('48', 'MyBatis-Plus_Mapper', 'mapper', null, 'I${context.javaBeanName}Mapper.java', 'package ${context.packageName}.dao;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport ${context.packageName}.pojo.domain.${context.javaBeanName}DO;\nimport org.apache.ibatis.annotations.Mapper;\n\n/**\n * ${table.comment}\n *\n * @author autoCode\n * ${datetime}\n */\n@Mapper\npublic interface I${context.javaBeanName}Mapper extends BaseMapper<${context.javaBeanName}DO> {\n\n\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('49', 'MyBatis-Plus_Mapper-XML', 'mapper_xml', null, '${context.javaBeanName}Mapper.xml', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper    PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"    \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${context.packageName}.repository.I${context.javaBeanName}Mapper\">\n	<resultMap id=\"queryResultMap\" type=\"${context.packageName}.pojo.dto.${context.javaBeanName}DTO\">\n        #foreach($column in $columns)\n        #if( \"${column.comment}\" != \"\" )\n		<!-- ${column.comment} -->\n		#end\n        <result column=\"${column.columnName}\" property=\"${column.javaFieldName}\" />\n        #end\n    </resultMap>\n</mapper>\n', 'admin');
INSERT INTO `template_config` VALUES ('50', 'MyBatis-Plus_IService', 'iservice', null, 'I${context.javaBeanName}Service.java', 'package ${context.packageName}.service.standard;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport ${context.packageName}.pojo.dto.${context.javaBeanName}DTO;\nimport ${context.packageName}.pojo.vo.${context.javaBeanName}VO;\nimport ${context.packageName}.pojo.domain.${context.javaBeanName}DO;\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\n/**\n * ${table.comment}接口\n * \n * @author autoCode\n * ${datetime}\n */\npublic interface I${context.javaBeanName}Service{\n    /**\n     * 查询列表${table.comment}(带分页)\n     *\n     * @param ${context.javaBeanNameLF}DTO 请求${context.javaBeanNameLF}DTO数据\n     * @param currentPage 请求的页数\n     * @param pageSize 单页数\n     * @return 响应IPage<${context.javaBeanName}DTO>数据\n     */\n    IPage<${context.javaBeanName}DTO> select${context.javaBeanName}PageList(${context.javaBeanName}DTO ${context.javaBeanNameLF}DTO ,Long currentPage, Long pageSize);\n    \n     /**\n     * 批量保存${table.comment}\n     *\n     * @param ${context.javaBeanNameLF}DOList 保存的站点信息\n     * @return 是否成功\n     */\n    boolean saveBatch${context.javaBeanName}DO(List<${context.javaBeanName}DO> ${context.javaBeanNameLF}DOList);\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('51', 'MyBatis-Plus_Service', 'service', null, '${context.javaBeanName}Service.java', 'package ${context.packageName}.service.impl;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${context.packageName}.repository.I${context.javaBeanName}Mapper;\nimport ${context.packageName}.pojo.dto.${context.javaBeanName}DTO;\nimport ${context.packageName}.pojo.domain.${context.javaBeanName}DO;\nimport ${context.packageName}.pojo.vo.${context.javaBeanName}VO;\nimport ${context.packageName}.service.standard.I${context.javaBeanName}Service;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n/**\n * ${table.comment}接口实现类\n * \n * @author autoCode\n * ${datetime}\n */\n@Slf4j\n@Service\npublic class ${context.javaBeanName}Service extends ServiceImpl<I${context.javaBeanName}Mapper, ${context.javaBeanName}DO> implements I${context.javaBeanName}Service {\n\n    /**\n     * 查询列表${table.comment}(带分页)\n     *\n     * @param ${context.javaBeanNameLF}DTO 请求${context.javaBeanNameLF}DTO数据\n     * @param currentPage 请求的页数\n     * @param pageSize 单页数\n     * @return 响应IPage<${context.javaBeanName}DTO>数据\n     */\n    @Override\n    public IPage<${context.javaBeanName}DTO> select${context.javaBeanName}PageList(${context.javaBeanName}DTO ${context.javaBeanNameLF}DTO ,Long currentPage, Long pageSize){\n    	return null;\n    }\n    \n     /**\n     * 批量保存${table.comment}\n     *\n     * @param ${context.javaBeanNameLF}DOList 保存的站点信息\n     * @return 是否成功\n     */\n    @Override\n    public boolean saveBatch${context.javaBeanName}DO(List<${context.javaBeanName}DO> ${context.javaBeanNameLF}DOList){\n        if (CollectionUtils.isEmpty(${context.javaBeanNameLF}DOList)) {\n            return false;\n        }\n        return this.saveBatch(${context.javaBeanNameLF}DOList);\n    }\n}', 'admin');
INSERT INTO `template_config` VALUES ('63', 'ServerImpl_Trevet', 'service/impl', null, '${context.javaBeanName}Service.java', 'package ${context.packageName}.service.impl;\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${context.packageName}.pojo.domain.${context.javaBeanName}DO;\nimport ${context.packageName}.repository.I${context.javaBeanName}Mapper;\nimport ${context.packageName}.service.I${context.javaBeanName}Service;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Date;\n\n/**\n * @author autoCode\n * @ClassName: ${context.javaBeanName}Service\n * @Description: 描述\n * @Date\n */\n@Slf4j\n@Service\npublic class ${context.javaBeanName}Service extends ServiceImpl<I${context.javaBeanName}Mapper, ${context.javaBeanName}DO> implements I${context.javaBeanName}Service {\n\n}', 'admin');
INSERT INTO `template_config` VALUES ('64', 'vo_Trevet', 'pojo/vo', null, '${context.javaBeanName}VO.java', '##请编辑velocity模板\npackage ${context.packageName}.pojo.vo;\n\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\n\nimport java.util.Date;\n\n/**\n * @author autoCode\n * @ClassName: ${context.javaBeanName}VO\n * @Description: 描述\n * @Date\n */\n@Data\n@ApiModel(description = \"${context.javaBeanName}入参VO\")\npublic class ${context.javaBeanName}VO {\n#foreach($column in $columns)\n\n    /**\n     * ${column.comment}\n     */\n    @ApiModelProperty(value = \"${column.comment}\",dataType=\"${column.javaTypeBox}\",required=true)\n#if( \"${column.javaTypeBox}\" == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n    \n#end\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('65', 'xml_Trevet', 'mapper', null, '${context.javaBeanName}Mapper.xml', '<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${context.packageName}.repository.I${context.javaBeanName}Mapper\">\n    <!--<resultMap id=\"BaseResultMap\" type=\"${context.packageName}.pojo.domain.${context.javaBeanName}DO\">-->\n\n    <!--</resultMap>-->\n</mapper>', 'admin');
INSERT INTO `template_config` VALUES ('66', 'zny-entity-mybatis-plus', 'pojo/entity', null, '${context.javaBeanName}Entity.java', 'package ${context.packageName}.pojo.entity;\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport lombok.Data;\n\nimport java.util.Date;\n\n/**\n * ${table.comment}DO\n */\n@Data\n@TableName(\"${table.tableName}\")\npublic class ${context.javaBeanName}Entity {\n#foreach($column in $columns)\n    /**\n     * ${column.comment} \n     */\n#if(${column.isPk})\n#if(${column.isIdentity})\n    @TableId(type = IdType.AUTO)\n#else\n    @TableId(type = IdType.UUID)\n#end\n#end\n#if( \"${column.javaTypeBox}\" == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( \"${column.javaTypeBox}\" == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('67', 'zny-mapper-java-mybatis-plus', 'repository', null, '${context.javaBeanName}Mapper.java', '##请编辑velocity模板\npackage ${context.packageName}.repository;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport ${context.packageName}.pojo.entity.${context.javaBeanName}Entity;\nimport org.apache.ibatis.annotations.Mapper;\n/**\n * ${table.comment}\n * @author yhl\n */\n @Mapper\npublic interface ${context.javaBeanName}Mapper extends BaseMapper<${context.javaBeanName}Entity> {\n\n\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('68', 'zny-mapper-xml-mybatis-plus', 'mapper', null, '${context.javaBeanName}Mapper.xml', '##请编辑velocity模板\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper    PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"    \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${context.packageName}.repository.${context.javaBeanName}Mapper\">\n	\n</mapper>\n', 'admin');
INSERT INTO `template_config` VALUES ('69', 'zny-dto', 'pojo/dto', null, '${context.javaBeanName}Dto.java', '##请编辑velocity模板\npackage ${context.packageName}.pojo.dto;\n\nimport lombok.Data;\n\nimport java.util.Date;\n\n/**\n * ${table.comment}Dto\n */\n@Data\npublic class ${context.javaBeanName}Dto extends AbstractDto {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if( \"${column.javaTypeBox}\" == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( \"${column.javaTypeBox}\" == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('70', 'zny-vo', 'pojo/vo', null, '${context.javaBeanName}VO.java', '##请编辑velocity模板\npackage ${context.packageName}.pojo.vo;\n\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport lombok.Data;\n\nimport java.util.Date;\n\n\n/**\n * ${table.comment}VO\n * \n * @author ${loginUser}\n * ${datetime}\n */\n@Data\n@ApiModel(description = \"${context.javaBeanName}视图VO\")\npublic class ${context.javaBeanName}VO {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if( \"${column.javaTypeBox}\" == \"Double\" || \"${column.javaTypeBox}\" ==\"BigDecimal\" )\n    @ApiModelProperty(value = \"${column.comment}\", example = \"0\")\n#else\n    @ApiModelProperty(value = \"${column.comment}\")\n#end\n#if( \"${column.javaTypeBox}\" == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( \"${column.javaTypeBox}\" == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('71', 'zny-conver', 'pojo/convert', null, '${context.javaBeanName}Convert.java', '##请编辑velocity模板\npackage ${context.packageName}.pojo.convert;\n\nimport ${context.packageName}.pojo.dto.${context.javaBeanName}Dto;\nimport ${context.packageName}.pojo.entity.${context.javaBeanName}Entity;\nimport org.mapstruct.Mapper;\nimport org.mapstruct.factory.Mappers;\n\n/**\n * \n */\n@Mapper\npublic interface ${context.javaBeanName}Convert extends BasicObjectConvert<${context.javaBeanName}Dto, ${context.javaBeanName}Entity> {\n    ${context.javaBeanName}Convert CONVERT = Mappers.getMapper(${context.javaBeanName}Convert.class);\n}\n', 'admin');
INSERT INTO `template_config` VALUES ('72', 'TKMyBatis_DO', 'domain', null, '${context.javaBeanName}DO.java', 'package ${context.packageName}.pojo.domain;\n\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\nimport java.util.Date;\n\n/**\n * ${table.comment}DO\n *\n * @author autoCode\n * ${datetime}\n */\n@Data\n@TableName(\"${table.tableName}\")\npublic class ${context.javaBeanName}DO {\n#foreach($column in $columns)\n    /**\n     * ${column.comment}\n     */\n#if(${column.isPk})\n    @TableId\n#end\n#if( ${column.type} == \"datetime\" )\n	@TableField(value = \"$column.columnName\")\n    private LocalDateTime ${column.javaFieldName};\n#else\n#if( ${column.type} == \"date\" )\n	@TableField(value = \"$column.columnName\")\n    private LocalDate ${column.javaFieldName};\n#else\n#if( ${column.type} == \"time\" )\n	@TableField(value = \"$column.columnName\")\n    private LocalTime ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"BigDecimal\" )\n	@TableField(value = \"$column.columnName\")\n    private Double ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"version\" )\n	@Version\n    @TableField(value = \"$column.columnName\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"updateTime\" )\n	@TableField(value = \"$column.columnName\" , fill = FieldFill.INSERT_UPDATE, update = \"now()\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"createTime\" )\n	@TableField(value = \"$column.columnName\" , fill = FieldFill.INSERT, update = \"now()\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.javaFieldName} == \"valid\" )\n	@TableLogic\n    @TableField(value = \"$column.columnName\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n	@TableField(value = \"$column.columnName\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n}', 'admin');
INSERT INTO `template_config` VALUES ('73', 'TKMyBatis_IService', 'standard', null, 'I${context.javaBeanName}Service.java', 'package ${context.packageName}.service.standard;\n\n/**\n * ${table.comment}接口\n * \n * @author autoCode\n * ${datetime}\n */\npublic interface I${context.javaBeanName}Service extends BaseService<${context.javaBeanName}DO>{\n    \n}\n', 'admin');
INSERT INTO `template_config` VALUES ('74', 'TKMyBatis_Service', 'impl', null, '${context.javaBeanName}ServiceImpl.java', 'package ${context.packageName}.service.impl;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.collections4.CollectionUtils;\nimport org.springframework.stereotype.Service;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.mfhcd.paas.marketing.activities.mapper.I${context.javaBeanName}Mapper;\n\nimport java.util.List;\n/**\n * ${table.comment}接口实现类\n * \n * @author autoCode\n * ${datetime}\n */\n@Slf4j\n@Service\npublic class ${context.javaBeanName}ServiceImpl extends BaseServiceImpl<${context.javaBeanName}DO> implements I${context.javaBeanName}Service {\n	\n}', 'admin');
INSERT INTO `template_config` VALUES ('75', 'TKMyBatis_VO', 'vo', null, '${context.javaBeanName}Resp.java', 'package ${context.packageName}.pojo.vo;\n\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.LocalTime;\nimport java.util.Date;\n\n\n/**\n * ${table.comment}Resp\n * \n * @author autoCode\n * ${datetime}\n */\n@Data\n@Schema(title = \"${context.javaBeanName}Resp\", description = \"${table.comment}\")\npublic class ${context.javaBeanName}Resp {\n#foreach($column in $columns)\n    /**\n    * ${column.comment}\n    */\n    @Schema(title = \"${column.javaFieldName}\", description = \"${column.comment}\")\n#if( ${column.javaTypeBox} == \"BigDecimal\" )\n    private Double ${column.javaFieldName};\n#else\n#if( ${column.javaTypeBox} == \"Byte\" )\n    private Integer ${column.javaFieldName};\n#else\n#if( ${column.type} == \"datetime\")\n	@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n    private LocalDateTime ${column.javaFieldName};\n#else\n#if( ${column.type} == \"timestamp\")\n	@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone = \"GMT+8\")\n    private ${column.javaTypeBox} ${column.javaFieldName};\n#else\n#if( ${column.type} == \"date\" )\n	@JsonFormat(pattern = \"yyyy-MM-dd\", timezone = \"GMT+8\")\n    private LocalDate ${column.javaFieldName};\n#else\n#if( ${column.type} == \"time\" )\n	@JsonFormat(pattern = \"HH:mm:ss\", timezone = \"GMT+8\")\n    private LocalTime ${column.javaFieldName};\n#else\n	private ${column.javaTypeBox} ${column.javaFieldName};\n#end\n#end\n#end\n#end\n#end\n#end\n#end\n}\n\n\n', 'admin');
SET FOREIGN_KEY_CHECKS=1;
